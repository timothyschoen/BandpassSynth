name: CMake

on: [push, workflow_dispatch]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CMAKE_BUILD_PARALLEL_LEVEL: 3

jobs:

  recipher-firmware:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Dependencies
      run: sudo apt -qq update && sudo apt install -y gcc-arm-none-eabi

    - name: Build daisySP
      working-directory: ${{github.workspace}}/lib/DaisySP
      run: make

    - name: Build libDaisy
      working-directory: ${{github.workspace}}/lib/libdaisy
      run: make

    - name: Build firmware
      working-directory: ${{github.workspace}}
      run: make

    - name: Archive Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Recipher-firmware
        path: "${{github.workspace}}/build/Recipher.bin"

    - name: Release Artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: true
        draft: true
        files: Recipher-firmware

  macos-universal-build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/app/build        

    - name: Configure CMake
      working-directory: ${{github.workspace}}/app/build
      run: cmake ..

    - name: Import Code-Signing Certificates
      uses: figleafteam/import-codesign-certs@v2
      with: 
        p12-file-base64: ${{ secrets.P12_BASE64 }}
        p12-password: ${{ secrets.P12_PASSWORD }}

    - name: Build
      working-directory: ${{github.workspace}}/app/build
      run: cmake --build . --config $BUILD_TYPE && rm -rf ${{github.workspace}}/app/build/RecipherSettingsTool_artefacts/JuceLibraryCode

    - name: Sign and Notarise
      working-directory: ${{github.workspace}}
      env:
        AC_USERNAME: ${{ secrets.AC_USERNAME }}
        AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
      run: ./.github/workflows/notarise_macos.sh ${{github.workspace}}/app/build/RecipherSettingsTool_artefacts

    - name: Archive Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: RecipherSettingsTool-MacOS-Universal
        path: "${{github.workspace}}/RecipherSettingsTool-macOS-Universal.dmg"

    - name: Release Artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: true
        draft: true
        files: RecipherSettingsTool-MacOS-Universal

  windows-64-build:
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/app/build 

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/app/build
      run: cmake .. -G "Visual Studio 17 2022" -A x64

    - name: Build
      shell: bash
      working-directory: ${{github.workspace}}/app/build
      run: cmake --build . --config $BUILD_TYPE

    - name: Archive Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: RecipherSettingsTool-Win64
        path: "${{github.workspace}}/app/build/RecipherSettingsTool_artefacts/Release/Recipher Settings Tool.exe"

    - name: Release Artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: true
        draft: true
        files: RecipherSettingsTool-Win64

  windows-32-build:
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/app/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/app/build
      run: cmake .. -G "Visual Studio 17 2022" -A Win32

    - name: Build
      shell: bash
      working-directory: ${{github.workspace}}/app/build
      run: cmake --build . --config $BUILD_TYPE

    - name: Archive Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: RecipherSettingsTool-Win32
        path: "${{github.workspace}}/app/build/RecipherSettingsTool_artefacts/Release/Recipher Settings Tool.exe"

    - name: Release Artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: true
        draft: true
        files: RecipherSettingsTool-Win32

  ubuntu-22_04-build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Dependencies
      run: sudo apt -qq update && sudo apt install -y libasound2-dev libjack-jackd2-dev libcurl4-openssl-dev libfreetype6-dev libx11-dev libxcomposite-dev libxcursor-dev libxcursor-dev libxext-dev libxinerama-dev libxrandr-dev libxrender-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev mesa-common-dev

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/app/build

    - name: Configure CMake
      working-directory: ${{github.workspace}}/app/build
      run: cmake .. -G "Unix Makefiles"

    - name: Build
      working-directory: ${{github.workspace}}/app/build
      run: cmake --build . --config $BUILD_TYPE && rm -rf RecipherSettingsTool_artefacts/JuceLibraryCode

    - name: Create tarball
      working-directory: ${{github.workspace}}
      run: tar cvf RecipherSettingsTool.tar ${{github.workspace}}/app/build/RecipherSettingsTool_artefacts

    - name: Archive Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: RecipherSettingsTool-Ubuntu-22.04-x64
        path: ${{github.workspace}}/RecipherSettingsTool.tar

    - name: Release Artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: true
        draft: true
        files: RecipherSettingsTool-Ubuntu-22.04-x64

  ubuntu-20_04-build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Dependencies
      run: sudo apt -qq update && sudo apt install  -y libasound2-dev libjack-jackd2-dev libcurl4-openssl-dev libfreetype6-dev libx11-dev libxcomposite-dev libxcursor-dev libxcursor-dev libxext-dev libxinerama-dev libxrandr-dev libxrender-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev mesa-common-dev

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/app/build

    - name: Configure CMake
      working-directory: ${{github.workspace}}/app/build
      run: cmake .. -G "Unix Makefiles"

    - name: Build
      working-directory: ${{github.workspace}}/app/build
      run: cmake --build . --config $BUILD_TYPE && rm -rf RecipherSettingsTool_artefacts/JuceLibraryCode

    - name: Create tarball
      working-directory: ${{github.workspace}}
      run: tar cvf RecipherSettingsTool.tar ${{github.workspace}}/app/build/RecipherSettingsTool_artefacts

    - name: Archive Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: RecipherSettingsTool-Ubuntu-20.04-x64
        path: ${{github.workspace}}/RecipherSettingsTool.tar

    - name: Release Artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: true
        draft: true
        files: RecipherSettingsTool-Ubuntu-20.04-x64
        
  fedora-build:
      runs-on: ubuntu-latest
      container: fedora:36
      steps:
      - name: Update git
        run: sudo dnf install -y git
      - uses: actions/checkout@v3
        with:
          submodules: recursive
        env:
          PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

      - name: Install Dependencies
        run: sudo dnf install -y cmake alsa-lib-devel libXinerama-devel freetype-devel libcurl-devel gcc-c++ libXcomposite-devel freeglut-devel libXrandr-devel libXcursor-devel xz
      - name: Build
        working-directory: ${{github.workspace}}/app
        run: mkdir build && cd build && cmake .. -G "Unix Makefiles" && cmake --build . --config $BUILD_TYPE  && rm -rf RecipherSettingsTool_artefacts/JuceLibraryCode

      - name: Create tarball
        working-directory: ${{github.workspace}}
        run: tar cvf RecipherSettingsTool.tar ./app/build/RecipherSettingsTool_artefacts

      - name: Archive Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: RecipherSettingsTool-Fedora-36-x64
          path: ${{github.workspace}}/RecipherSettingsTool.tar

      - name: Release Artifacts
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: true
          draft: true
          files: RecipherSettingsTool-Fedora-36-x64

  arch-build:
    runs-on: ubuntu-latest
    container:
      image: archlinux
      options: --privileged
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup
    steps:
    - name: Update git
      run: pacman -Sy && pacman -S --noconfirm git && pacman --noconfirm -Syu
    - uses: actions/checkout@v3
      with:
        submodules: recursive
      env:
        PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        
    - name: Install Dependencies
      run: pacman -S --noconfirm alsa-lib freetype2 libx11 libxcursor libxext libxinerama libxrandr libxrender webkit2gtk cmake make gcc pkgconf python

    - name: Build
      working-directory: ${{github.workspace}}/app
      run: mkdir build && cd build && CC=/usr/bin/gcc CXX=/usr/bin/g++ cmake .. -G "Unix Makefiles" && cmake --build . --config $BUILD_TYPE && rm -rf RecipherSettingsTool_artefacts/JuceLibraryCode

    - name: Create tarball
      working-directory: ${{github.workspace}}
      run: tar cvf RecipherSettingsTool.tar ./app/build/RecipherSettingsTool_artefacts

    - name: Archive Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: RecipherSettingsTool-Arch-x64
        path: ${{github.workspace}}/RecipherSettingsTool.tar

    - name: Release Artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: true
        draft: true
        files: RecipherSettingsTool-Arch-x64

  opensuse-build:
    runs-on: ubuntu-latest
    container:
      image: opensuse/leap
      options: --privileged
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup
    steps:
    - name: Update git
      run: zypper refresh && zypper install -y git
    - uses: actions/checkout@v3
      with:
        submodules: recursive
      env:
        PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    - name: Install Dependencies
      run: zypper install -y xz tar gzip cmake alsa-lib-devel libXinerama-devel freetype-devel libcurl-devel libXcomposite-devel freeglut-devel libXrandr-devel libXcursor-devel freetype2-devel gcc gcc-c++

    - name: Build
      working-directory: ${{github.workspace}}/app
      run: mkdir build && cd build && cmake .. -G "Unix Makefiles" && cmake --build . --config $BUILD_TYPE && rm -rf RecipherSettingsTool_artefacts/JuceLibraryCode

    - name: Create tarball
      working-directory: ${{github.workspace}}
      run: tar cvf RecipherSettingsTool.tar ./app/build/RecipherSettingsTool_artefacts

    - name: Archive Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: RecipherSettingsTool-OpenSUSE-x64
        path: ${{github.workspace}}/RecipherSettingsTool.tar

    - name: Release Artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: true
        draft: true
        files: RecipherSettingsTool-OpenSUSE-x64

  debian-build:
    runs-on: ubuntu-latest
    container:
      image: debian
      options: --privileged
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup
    steps:
    - name: Update git
      run: apt -qq update && apt install -y git

    - uses: actions/checkout@v3
      with:
        submodules: recursive
      env:
        PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    - name: Install Dependencies
      run: apt install -y libasound2-dev libjack-jackd2-dev libcurl4-openssl-dev libfreetype6-dev libx11-dev libxcomposite-dev libxcursor-dev libxcursor-dev libxext-dev libxinerama-dev libxrandr-dev libxrender-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev mesa-common-dev cmake make gcc g++

    - name: Build
      working-directory: ${{github.workspace}}/app
      run: mkdir build && cd build && CXX=g++ cmake .. -G "Unix Makefiles" && cmake --build . --config $BUILD_TYPE && rm -rf RecipherSettingsTool_artefacts/JuceLibraryCode

    - name: Create tarball
      working-directory: ${{github.workspace}}
      run: tar cvf RecipherSettingsTool.tar ./app/build/RecipherSettingsTool_artefacts

    - name: Archive Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: RecipherSettingsTool-Debian-x64
        path: ${{github.workspace}}/RecipherSettingsTool.tar

    - name: Release Artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: true
        draft: true
        files: RecipherSettingsTool-Debian-x64
